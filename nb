import pandas as pd
from sklearn.model_selection import train_test_split,validation_curve
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score , roc_curve
import matplotlib.pyplot as plt
import numpy as np

df = pd.read_csv("covid.csv")


df = pd.get_dummies(df, columns=['pc', 'wbc', 'mc', 'ast', 'bc', 'ldh'])
print(df)

X = df.drop('diagnosis', axis=1)
y = df['diagnosis']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

nb_classifier = GaussianNB()
nb_classifier.fit(X_train, y_train)


y_pred = nb_classifier.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1_score = f1_score(y_test, y_pred)
fpr, tpr, thresholds = roc_curve(y_test, y_pred)


print(f"Accuracy: {accuracy:.2f}")
print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")
print(f"F1 Score: {f1_score:.2f}")

plt.plot(fpr, tpr, color='b', label='ROC curve')
plt.plot([0, 1], [0, 1], color='gray', linestyle='--', label='Random Guess')
plt.title('Receiver Operating Characteristic (ROC) Curve')
plt.xlabel('False Positive Rate (FPR)')
plt.ylabel('True Positive Rate (TPR)')
plt.legend()
plt.show()


param_range = np.logspace(-6, 6, 13)
train_scores, test_scores = validation_curve(GaussianNB(), X, y, param_name="var_smoothing", param_range=param_range, cv=5)

plt.plot(param_range, np.mean(train_scores,axis=1), label='Training score')
plt.plot(param_range, np.mean(test_scores,axis=1), label='Cross-validation score')
plt.xscale('log')
plt.title('Validation Curve for Na√Øve Bayesian Classifier')
plt.xlabel('Smoothing Parameter (var_smoothing)')
plt.ylabel('Score')
plt.legend()
plt.show()
